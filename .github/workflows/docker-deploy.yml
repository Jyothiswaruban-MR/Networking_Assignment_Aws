name: Build and Deploy Docker Image to EC2

on:
  push:
    branches:
      - master  # Trigger when code is pushed to the 'master' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Log in to AWS ECR
      - name: Log in to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          aws --version
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 539247459542.dkr.ecr.us-east-1.amazonaws.com

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t nginx-web-app .

      # Step 4: Tag the Docker image
      - name: Tag Docker image
        run: |
          docker tag nginx-web-app:latest 539247459542.dkr.ecr.us-east-1.amazonaws.com/nginx-web-app:latest

      # Step 5: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push 539247459542.dkr.ecr.us-east-1.amazonaws.com/nginx-web-app:latest

         # Step 6: SSH into EC2 and deploy Docker container
      - name: SSH into EC2 and deploy Docker container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Enable debugging
            set -x

            # Install AWS CLI if not already installed
            if ! command -v aws &> /dev/null
            then
                echo "AWS CLI not found, installing..."
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install
            fi

            # Log in to AWS ECR
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 539247459542.dkr.ecr.us-east-1.amazonaws.com

            # Pull the Docker image from ECR
            sudo docker pull 539247459542.dkr.ecr.us-east-1.amazonaws.com/nginx-web-app:latest

            # Stop and remove the existing container (if any)
            container_id=$(sudo docker ps -q --filter ancestor=539247459542.dkr.ecr.us-east-1.amazonaws.com/nginx-web-app:latest)
            if [ -n "$container_id" ]; then
                sudo docker stop $container_id
                sudo docker rm $container_id
            fi

            # Run the new container
            sudo docker run -d -p 8080:80 539247459542.dkr.ecr.us-east-1.amazonaws.com/nginx-web-app:latest
